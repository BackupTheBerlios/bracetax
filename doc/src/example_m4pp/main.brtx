
{header|
    {title|Self-documenting authoring example}
    {authors|Sebastien Mondet}
    {subtitle|Using m4, post-processing and more{...}}
}

{section 1 sec_links|Some links}

We will use {link http://en.wikipedia.org/wiki/M4_(computer_language)|M4} 

{section 1 sec_examples|Detailled examples}

{section 2 sec_def_todo|Creating a {q|ToDo} tag}


define(`TODO', ifelse(_output_format , HTML , `{verbatim end html}
<span style="color: red; background-color: yellow">TO-DO</span>
{end}' , `{verbatim end latex}
\textcolor{red}{TO-DO}
{end}'
))dnl

Here is the M4 code (for now with {#} characters{...}):
{verbatim e m4_code}
# define(`TODO', ifelse(_output_format , HTML , `{verbatim end html}
# <span style="color: red; background-color: yellow">TO-DO</span>
# {end}' , `{verbatim end latex}
# \textcolor{red}{TO-DO}
# {end}'
# ))dnl
{e}
so, with the command:
{verbatim e shell_code}
m4  -D_output_format="LATEX"  main.brtx > main.brtx.tmp
{e}
with a {t|`TODO'}, the {t|main.tex} generated by {t|brtx} will look
like{note|Except the classical space between '\' and 'end'{...}}:
{verbatim e latex_code}
%verbatimbegin:latex
\begin{verbatim}
\textcolor{red}{TO-DO}
\ end{verbatim}
%verbatimend:latex
{e}
which will be transformed by the post-processor:
{verbatim e shell_code}
brtx -postpro -pp inlinelatex -i main.tex.pp -o main.tex
{e}
to:
{verbatim e latex_code}
% < inline latex >
\textcolor{red}{TO-DO}
% </ inline latex >
{e}

{section 2 sec_latex_command|Defining the {t|LATEX} command}

# Talk about an internal command LATEX(...)

TODO

{section 2 sec_date_command|Using command line definitions}

Here we have compilation date: {t|_todaydate}
{p}
For that we just passed the source:
{verbatim e brtx_code}
Here we have compilation date: {t|`_todaydate'}
{e}
through the command:
{verbatim e shell_code}
m4 -D`_todaydate'="$(date)" main.brtx > main.brtx.tmp
{e}

{section 2 sec_biblio|Citations}

# Bibtex for LaTeX, links for HTML
TODO

{section 2 sec_include|Using {t|include}}

With a simple:
{verbatim e brtx_code}
{verbatim verycomplexend}
`include'(./Makefile)
{verycomplexend}
{e}
we obtain:
{verbatim verycomplexend}
include(./Makefile)
{verycomplexend}


